name: CI/CD Deploy to EC2 (Beta Frontend)

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.EC2_PEM_KEY }}" > ~/.ssh/redflag-be.pem
          chmod 600 ~/.ssh/redflag-be.pem

      - name: Deploy to EC2
        run: |
          echo "${{ secrets.EC2_PUBLIC_IP }}"
          ssh -o ServerAliveInterval=60 -o ServerAliveCountMax=10 -i ~/.ssh/redflag-be.pem -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
            # Get root role
            sudo -i

            # Cleanup old unused images and containers
            echo "Cleaning up old resources..."
            docker container prune -f
            docker image prune -a -f --filter "until=24h"

            # Frontend Deployment
            echo "=== Deploying Frontend ==="
            cd ~/redflag-project/RFN_Frontend

            # Fetch latest code
            git reset --hard
            git pull origin main

            # Save current frontend version for rollback
            if docker ps -q -f name=redflag-frontend; then
              docker tag redflag-frontend:latest redflag-frontend:rollback
            fi

            echo "Building new frontend image..."
            docker build --memory-swap=256m -t redflag-frontend:latest .

            echo "Running new frontend container on test port..."
            docker run -d --rm --name redflag-frontend_new -p 3001:3000 redflag-frontend:latest

            echo "Frontend health check..."
            sleep 10

            # Check if the new frontend is healthy
            MAX_RETRIES=3
            RETRY_COUNT=0
            HEALTHY=false
            
            while [ $RETRY_COUNT -lt $MAX_RETRIES ]; do
              HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:3001)
              if [ "$HTTP_CODE" = "200" ] || [ "$HTTP_CODE" = "401" ]; then
                HEALTHY=true
                break
              fi
              echo "Health check attempt $((RETRY_COUNT + 1)) failed, retrying..."
              RETRY_COUNT=$((RETRY_COUNT + 1))
              sleep 10
            done

            if [ "$HEALTHY" = true ]; then
              echo "New frontend version healthy. Switching ports..."
              docker rm -f redflag-frontend || true
              docker stop redflag-frontend_new
              docker run -d --restart unless-stopped --name redflag-frontend -p 3000:3000 redflag-frontend:latest
              echo "Frontend deployment successful!"
            else
              echo "Frontend health check failed. Rolling back..."
              docker stop redflag-frontend_new
              docker rmi redflag-frontend:latest
              if docker images | grep -q "redflag-frontend:rollback"; then
                docker tag redflag-frontend:rollback redflag-frontend:latest
              fi
              exit 1
            fi

            # Final cleanup
            echo "=== Final Cleanup ==="
            docker image prune -f
            docker system prune -a -f
            docker rmi redflag-frontend:rollback || true
          EOF

      - name: Cleanup
        if: always()
        run: rm -f ~/.ssh/redflag-be.pem
